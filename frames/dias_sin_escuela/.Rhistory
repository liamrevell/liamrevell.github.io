model<-matrix(c(
0,1,0,0,0,0,
2,0,3,0,0,0,
0,4,0,5,0,0,
0,0,6,0,7,0,
0,0,0,8,0,9,
0,0,0,0,10,0),6,6,byrow=TRUE,
dimnames=list(0:5,0:5))
model
fitOrdered<-fitMk(sqTree.pruned,toes,model=model,pi="fitzjohn")
fitOrdered
plot(fitOrdered)
plot(fitOrdered,show.zeros=TRUE)
plot(fitOrdered,show.zeros=FALSE)
model<-matrix(c(
0,1,0,0,0,0,
2,0,1,0,0,0,
0,2,0,1,0,0,
0,0,2,0,1,0,
0,0,0,2,0,1,
0,0,0,0,2,0),6,6,byrow=TRUE,
dimnames=list(0:5,0:5))
model
pi<-setNames(c(0,0,0,0,0,1),0:5)
pi
fitTwoRate<-fitMk(sqTree.pruned,toes,model=model,pi=pi)
plot(fitTwoRate)
plot(fitTwoRate,show.zeros=FALSE)
fitTwoRate
as.Qmatrix(fitTwoRate)
logLik(fitTwoRate)
AIC(fitTwoRate)
rm(list=ls())
dev.off()
library(phytools)
?fitPagel
bonyfish.tre<-read.tree(file=
"http://www.phytools.org/Rbook/7/bonyfish.tre")
bonyfish.tre
bonyfish.data<-read.csv(file=
"http://www.phytools.org/Rbook/7/bonyfish.csv",
row.names=1,
stringsAsFactors = TRUE)
head(bonyfish.data)
spawning_mode<-setNames(bonyfish.data$spawning_mode,
rownames(bonyfish.data))
paternal_care<-setNames(bonyfish.data$paternal_care,
rownames(bonyfish.data))
spawning_mode
parentalCare.fit<-fitPagel(bonyfish.tree,paternal_care,
spawning_mode)
parentalCare.fit<-fitPagel(bonyfish.tre,paternal_care,
spawning_mode)
parentalCare.fit
plot(parentalCare.fit)
rm(list=ls()
)
dev.off()
library(phytools)
eel.tree<-read.tree(file="elopmorph.tre")
eel.tree<-read.tree(file=
"http://www.phytools.org/Rbook/8/elopomorph.tre")
eel.tree
eel.data<-read.csv(file=
"http://www.phytools.org/Rbook/8/elopomorph.csv",
stringsAsFactors = TRUE)
head(eel.data)
eel.data<-read.csv(file=
"http://www.phytools.org/Rbook/8/elopomorph.csv",
stringsAsFactors = TRUE, row.names=1)
head(eel.data)
lnTL<-setNames(log(eel.data$Max_TL_cm),
rownames(eel.data))
lnTL
name.check(eel.tree,eel.data)
Ntip(eel.tree)
length(eel.tree$tip.label)
fit.lnTL<-fastAnc(eel.tree,lnTL)
fit.lnTL
plotTree(eel.tree,ftype="i",fsize=0.7)
nodelabels(cex=0.7)
args(fastAnc)
fit.lnTL<-fastAnc(eel.tree,lnTL,CI=TRUE)
fit.lnTL
range(lnTL)
eel.contMap<-contMap(eel.tree,lnTL,plot=FALSE)
plot(eel.contMap)
plot(eel.contMap,fsize=0.6)
plot(eel.contMap,fsize=c(0.6,0.8))
eel.contMap<-setmap(eel.contMap,c("white","orange","red"))
eel.contMap<-setMap(eel.contMap,c("white","orange","red"))
plot(eel.contMap,fsize=c(0.5,0.8))
plot(eel.contMap,fsize=c(0.6,0.8))
eel.contMap<-setMap(eel.contMap,c("white","black"))
plot(eel.contMap,fsize=c(0.6,0.8))
errorbar.contMap(eel.contMap)
eel.contMap<-contMap(eel.tree,lnTL,plot=FALSE,
lims=c(3.2,5.8))
plot(eel.contMap,fsize=c(0.6,0.8))
eel.contMap<-setMap(eel.contMap,c("white","black"))
plot(eel.contMap,fsize=c(0.6,0.8))
errorbar.contMap(eel.contMap,lwd=4)
errorbar.contMap(eel.contMap,lwd=6)
errorbar.contMap(eel.contMap,lwd=8)
## http://www.phytools.org/Rbook/8/elopomorph.tre
## http://www.phytools.org/Rbook/8/elopomorph.csv
library(phytools)
eel.tree<-read.tree(file=
"http://www.phytools.org/Rbook/8/elopomorph.tre")
eel.tree
eel.data<-read.csv(file=
"http://www.phytools.org/Rbook/8/elopomorph.csv",
stringsAsFactors = TRUE, row.names=1)
head(eel.data)
name.check(eel.tree,eel.data)
lnTL<-setNames(log(eel.data$Max_TL_cm),
rownames(eel.data))
Ntip(eel.tree)
length(eel.tree$tip.label)
lnTL
fit.lnTL<-fastAnc(eel.tree,lnTL)
fit.lnTL
plotTree(eel.tree,ftype="i",fsize=0.7)
nodelabels(cex=0.7)
args(fastAnc)
fit.lnTL<-fastAnc(eel.tree,lnTL,CI=TRUE)
fit.lnTL
range(lnTL)
eel.contMap<-contMap(eel.tree,lnTL,plot=FALSE,
lims=c(3.2,5.8))
plot(eel.contMap,fsize=c(0.6,0.8))
eel.contMap<-setMap(eel.contMap,c("white","black"))
plot(eel.contMap,fsize=c(0.6,0.8))
errorbar.contMap(eel.contMap,lwd=8)
?anc.ML
?anc.trend
eel.tree
head(eel.data)
feed.mode<-setNames(eel.data$feed_mode,rownames(eel.data))
feed.mode
?phylo.impute
install.packages("corHMM")
library(corHMM)
head(feed.mode)
as.numeric(feed.mode)
eel.data<-data.frame(Genus_sp=names(feed.mode),
feed.mode=as.numeric(feed.mode)-1)
head(eel.data,20)
matrix(c(NA,1,1,NA),2,2)
fit.joint<-corHMM(eel.tree,eel.data,node.states="joint",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2))
fit.joint
str(fit.joint)
eel.data<-data.frame(Genus_sp=names(feed.mode),
feed.mode=as.numeric(feed.mode))
fit.joint<-corHMM(eel.tree,eel.data,node.states="joint",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2))
str(fit.joint)
eel.data<-data.frame(Genus_sp=names(feed.mode),
feed.mode=feed.mode)
fit.joint<-corHMM(eel.tree,eel.data,node.states="joint",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2))
str(fit.joint)
fit.joint
eel.data
eel.data<-data.frame(Genus_sp=names(feed.mode),
feed.mode=as.numeric(feed.mode))
fit.joint<-corHMM(eel.tree,eel.data,node.states="joint",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2))
str(fit.joint)
fit.joint$phy$node.label
plotTree(eel.tree,fsize=0.5)
to.matrix(fit.joint$phy$node.label,0:1)
to.matrix(fit.joint$phy$node.label,1:2)
nodelabels(pie=fit.joint$phy$node.label,1:2),cex=0.4)
nodelabels(pie=to.matrix(fit.joint$phy$node.label,1:2),cex=0.4)
tiplabel(pie=to.matrix(feed.mode[eel.tree$tip.label],
levels(feed.mode)),cex=0.4)
tiplabels(pie=to.matrix(feed.mode[eel.tree$tip.label],
levels(feed.mode)),cex=0.4)
plotTree(eel.tree,fsize=0.5)
to.matrix(fit.joint$phy$node.label,1:2)
nodelabels(pie=to.matrix(fit.joint$phy$node.label,1:2),cex=0.4)
tiplabels(pie=to.matrix(feed.mode[eel.tree$tip.label],
levels(feed.mode)),cex=0.3)
fit.marginal<-corHMM(eel.tree,eel.data,node.states="marginal",
rate.cat=1,rate.mat=matrix(c(NA,1,1,NA),2,2))
fit.marginal
fit.marginal$states
nodelabels(pie=fit.marginal$states,cex=0.4)
nodelabels(pie=fit.marginal$states,cex=0.5)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtree<-make.simmap(eel.tree,feed.mode,model="ER")
plot(mtree,lwd=3,fsize=0.6)
mtrees<-make.simmap(eel.tree,feed.mode,nsim=100)
mtrees
par(mfrow=c(10,10))
par(mfrow=c(10,10))
plot(mtrees,ftype="off")
pd<-summary(mtrees)
pd
dev.off()
plot(pd,fsize=0.6)
eel.densityMap<-densityMap(mtrees,plot=FALSE)
plot(eel.densityMap,fsize=0.6)
plot(eel.densityMap,fsize=c(0.6,0.8))
mtrees
dd<-density(mtrees)
dev.off()
dd
plot(dd)
dev.off()
darter.tree<-read.tree(file=
"http://www.phytools.org/Rbook/9/etheostoma_percina_chrono.tre")
plotTree(darter.tree,ftype="i",
fsize=0.4,type="fan",lwd=1,part=0.88)
h<-max(nodeHeights(darter.tree))
obj<-axis(1,pos=-2,at=h-c(0,5,10,15,20),
cex.axis=0.5,labels=FALSE)
text(obj,rep(-5,length(obj)),h-obj,
cex=0.6)
text(mean(obj),-8,"time (mybp)",
cex=0.8)
plotTree(darter.tree,ftype="i",
fsize=0.4,type="fan",lwd=1,part=0.88)
h<-max(nodeHeights(darter.tree))
obj<-axis(1,pos=-2,at=h-c(0,5,10,15,20),
cex.axis=0.5,labels=FALSE)
text(obj,rep(-5,length(obj)),h-obj,
cex=0.6)
text(mean(obj),-8,"time (mybp)",
cex=0.8)
dev.off()
darter.tree
darter.ltt<-ltt(darter.tree,plot=FALSE)
darter.ltt
plot(darter.ltt)
darter.tree<-multi2di(darter.tree)
darter.tree
darter.ltt<-ltt(darter.tree,plot=FALSE)
darter.ltt
plot(darter.ltt,lwd=2,bty="n")
plot(darter.ltt,lwd=2,bty="n",show.tree=TRUE)
darter.mccr<-mccr(darter.ltt,rho=201/216,
nsim=500)
darter.mccr
plot(darter.mccr)
bd.model<-fit.bd(darter.tree)
bd.model
sampling.f<-201/216
sampling.f
bd.model<-fit.bd(darter.tree,rho=sampling.f)
bd.model
yule.model<-fit.yule(darter.tree,rho=sampling.f)
yule.model
AIC(yule.model)
AIC(yule.model,bd.model)
bd.model2<-fit.bd(darter.tree,rho=201/300)
bd.model2
bd.model2<-fit.bd(darter.tree,rho=201/400)
bd.model2
ngrid<-100
b<-seq(0.24,0.27,length.out=ngrid)
d<-seq(0.02,0.05,length.out=ngrid)
logL<-matrix(NA,ngrid,ngrid)
for(i in 1:ngrid) for(j in 1:length(d))
logL[i,j]<-bd.model$lik(c(b[i],d[j]))
par(mar=c(5.1,4.1,2.1,2.1))
contour(x=b,y=d,logL,nlevels=50,
xlab=expression(lambda),
ylab=expression(mu),bty="l",axes=FALSE)
axis(1,at=seq(0.24,0.27,by=0.01),cex.axis=0.8)
axis(2,at=seq(0.02,0.05,by=0.01),cex.axis=0.8,
las=1)
points(bd.model$b,bd.model$d,cex=1.5,pch=4,
col="blue",lwd=2)
install.packages("diversitree")
library(diversitree)
?make.bd
bd<-make.bd(darter.tree,
sampling.f=sampling.f)
bd
bd.model
args(bd)
bd(c(0.25,0.03))
?find.mle
fitted.bd<-find.mle(bd,
x.init=c(0.1,0.05),
method="optim",
lower=0)
fitted.bd
library(diversitree)
library(geiger)
gt<-read.tree(file=
"http://www.phytools.org/Rbook/11/grunts.phy")
gt
library(phytools)
plotTree(gt,fsize=0.7)
"http://www.phytools.org/Rbook/11/grunts.csv)
")
gd<-read.csv(file=
"http://www.phytools.org/Rbook/11/grunts.csv")
head(gd)
gd<-read.csv(file=
"http://www.phytools.org/Rbook/11/grunts.csv",
row.names=1)
head(gd)
gd<-read.csv(file=
"http://www.phytools.org/Rbook/11/grunts.csv",
row.names=1,stringsAsFactors=TRUE)
head(gd)
hab<-gd[,1]
names(hab)<-rownames(gd)
plotTree(gt,ftype="i",fsize=0.7,
offset=0.5)
tiplabels(pie=to.matrix(hab,0:1)[gt$tip.label,],
piecol=c("white","black"),cex=0.4)
legend("bottomleft",c("non-reef","reef"),
pch=21,pt.cex=1.6,
cex=0.8,bty="n",
pt.bg=c("white","black"))
?make.bisse
head(gd)
hab<-setNames(gd$habitat,rownames(gd))
hab
bisse.model<-make.bisse(gt,hab)
?starting.point.bisse
p<-starting.point.bisse(gt)
p
bisse.mle<-find.mle(bisse.model,p)
?find.mle
bisse.mle
bissenull.model<-constrain(bisse.model,
lambda1~lambda0,mu1~mu0)
p[-c(2,4)]
p
p
p[c(1,3,5,6)]
bissenull.mle<-find.mle(bissenull.model,
x.init=p[c(1,3,5,6)])
bissenull.mle
bisseAnova<-anova(bisse.mle,null=bissenull.mle)
bisseAnova
prior<-make.prior.exponential(1/(2*0.4))
prior
?mcmc
bisse.mcmc<-mcmc(bisse.model,bisse.mle$par,
nsteps=100,prior=prior,w=0.1,
print.every=100)
bisse.mcmc<-mcmc(bisse.model,bisse.mle$par,
nsteps=1000,prior=prior,w=0.1,
print.every=100)
install.packages("hisse")
library(hisse)
head(gd)
hd<-data.frame(Genus.species=rownames(gd),
x=gd[,"habitat"])
head(hd)
rates.hisse<-TransMatMaker(hidden.states=TRUE)
rates.hisse<-TransMatMaker(hidden.states=TRUE)
?TransMatMaker.old
rates.hisse<-TransMatMaker.old(hidden.states=TRUE)
rates.hisse
rates.hisse<-ParDrop(rates.hisse,c(3,5,8,10))
rates.hisse
rates.bisse<-TransMatMaker.old(hidden.states=FALSE)
rates.bisse
bisse.hmle<-hisse(gt,hd,hidden.states=FALSE,
turnover.anc=c(1,2,0,0),eps.anc=c(1,2,0,0),
trans.rate=rates.bisse,output.type="raw")
bisse.hmle<-hisse(gt,hd,hidden.states=FALSE,
turnover.anc=c(1,2,0,0),eps.anc=c(1,2,0,0),
trans.rate=rates.bisse,output.type="raw")
bisse.hmle<-hisse(gt,hd,hidden.states=FALSE,
turnover.anc=c(1,2,0,0),eps.anc=c(1,2,0,0),
trans.rate=rates.bisse,output.type="raw")
bisse.hmle<-hisse(gt,hd,hidden.states=FALSE,
trans.rate=rates.bisse,output.type="raw")
bisse.hmle<-hisse(gt,hd,hidden.states=FALSE,
trans.rate=rates.bisse)
?chronos
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
packageVersion("covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
packageVersion("covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp()
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
?p
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
p
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(devtools)
install_github("liamrevell/covid19.Explorer")
library(devtools)
install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
install.packages("phytools")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
devtools::install_github("liamrevell/covid19.Explorer")
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
shiny::runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/excess-mortality-explorer')
library(shiny)
?dateInput
Sys.Date()
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
?fluidPage
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
?fixedPage
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
remotes::install_github("ColinFay/geoloc")
geoloc::wtfismyip()
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
install.packages("curl")
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
setwd("../Dropbox/liamrevell.github.io/frames/dias_sin_escuela/")
rmarkdown::render("index.Rmd")
runApp('C:/Users/liamj/Dropbox/CDC_COVID19_deaths/diassinescuela')
